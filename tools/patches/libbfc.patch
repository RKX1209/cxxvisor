diff --git a/bfc.c b/bfc.c
index d12d85f..9558d42 100644
--- a/bfc.c
+++ b/bfc.c
@@ -37,9 +37,6 @@
         const char *str_text = "\033[1;33mWARNING\033[0m: unsupported libc function called = "; \
         const char *str_func = __PRETTY_FUNCTION__; \
         const char *str_endl = "\n"; \
-        write(0, str_text, strlen(str_text)); \
-        write(0, str_func, strlen(str_func)); \
-        write(0, str_endl, strlen(str_endl)); \
     }
 
 // Supported Symbols
@@ -553,22 +550,10 @@ malloc(size_t size)
     return _malloc_r(0, size);
 }
 
-void
-free(void *ptr)
-{
-    _free_r(0, ptr);
-}
-
 void *
 calloc(size_t nmemb, size_t size)
 {
     return _calloc_r(0, nmemb, size);
 }
 
-void *
-realloc(void *ptr, size_t size)
-{
-    return _realloc_r(0, ptr, size);
-}
-
 #endif
diff --git a/pthread.cpp b/pthread.cpp
index efe9471..58e4f30 100644
--- a/pthread.cpp
+++ b/pthread.cpp
@@ -335,11 +335,12 @@ pthread_getspecific(pthread_key_t key)
     if (key > MAX_THREAD_SPECIFIC_DATA)
         return nullptr;
 
-#ifdef LOOKUP_TLS_DATA
+/*#ifdef LOOKUP_TLS_DATA
     auto threadSpecificData = (void **)thread_context_tlsptr();
 #endif
 
-    return threadSpecificData[key];
+    return threadSpecificData[key]; */
+    return 0;
 }
 
 extern "C" int
@@ -635,11 +636,11 @@ pthread_setspecific(pthread_key_t key, const void *data)
     if (key > MAX_THREAD_SPECIFIC_DATA)
         return -EINVAL;
 
-#ifdef LOOKUP_TLS_DATA
+/*#ifdef LOOKUP_TLS_DATA
     auto threadSpecificData = (void **)thread_context_tlsptr();
 #endif
 
-    threadSpecificData[key] = (void *)data;
+    threadSpecificData[key] = (void *)data; */
     return 0;
 }
 
